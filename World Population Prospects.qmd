---
title: "STAT570_Final_Project"
author: "Zehra Cebeci, Ömer Faruk Yahşi"
format: html
editor: visual
---

## Quarto

Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see <https://quarto.org>.

```{r}
library(tidyverse)
library(readxl)
library(curl)
library(dplyr)
library(purrr)
library(stringr)
library(janitor)
library(ggplot2)
```

```{r}

# Specify the web address of the Excel file
url <- "https://population.un.org/wpp/Download/Files/1_Indicators%20(Standard)/EXCEL_FILES/1_General/WPP2022_GEN_F01_DEMOGRAPHIC_INDICATORS_COMPACT_REV1.xlsx"

data <- "WPP2022_GEN_F01_DEMOGRAPHIC_INDICATORS_COMPACT_REV1.xlsx"

curl_download(url, destfile = data)
```

```{r}

# Downloaded sheets
sheets <- excel_sheets(data)

# Select the first two sheets
selected_sheets <- sheets[1:2]

# Function to read and clean data from a sheet
read_clean <- function(file_path, sheet) {
  read_excel(file_path, sheet = sheet, skip = 16, col_types = "text") |> 
    mutate(type = sheet)
}

# Read and clean selected sheets, then bind them into a single data frame
raw_data <- map_df(selected_sheets, ~read_clean(data, .)) |> 
  clean_names()
```

```{r}
# Creating a new DataFrame without rows where 'type' is 'Label/Separator'
raw_data_wo_ls <- subset(raw_data, type != "Label/Separator")

```

```{r}
raw_data_wo_ls$total_population_as_of_1_january_thousands <- as.numeric(raw_data_wo_ls$total_population_as_of_1_january_thousands)
raw_data_wo_ls$total_population_as_of_1_july_thousands <- as.numeric(raw_data_wo_ls$total_population_as_of_1_july_thousands)



# Group by year and arrange by year
sorted_data <- raw_data_wo_ls |> 
  mutate(rate_of_change = ((total_population_as_of_1_january_thousands - total_population_as_of_1_july_thousands) / total_population_as_of_1_january_thousands) * 100) |>  
  select(rate_of_change, everything()) |> 
  group_by(year) |> 
  arrange(year) |> 
  ungroup()

```

```{r}

# Create a ggplot with the specified columns
ggplot(sorted_data, aes(x = year, y = rate_of_change)) +
  geom_point() +
  scale_y_continuous(name = "Population Rate of Change (%)", 
                     limits = c(0, 100))+
  labs(title = "Variation of Total Population Variation Over Years between 1 Jan 2022 to 1 July 2022") +
  theme_minimal()+
  scale_x_discrete(breaks = seq(1950, 2100, by = 10))

```

```{r}

# Creating a new DataFrame without specific columns
raw_data_reduced <- raw_data_wo_ls |> 
  select(-contains("_as_of_1_january"), 
         -index,
         -iso3_alpha_code,
         -iso2_alpha_code,
         -sdmx_code,
         -parent_code,
         -notes,
         -location_code
         )

```

```{r}
raw_data_rounded <- raw_data_reduced |> 
  mutate_at(vars(names(raw_data_reduced)[4:ncol(raw_data_reduced)]), as.numeric) |> 
  mutate_at(vars(names(raw_data_reduced)[4:ncol(raw_data_reduced)]), ~round(., 3))
```

```{r}

total_na_count <- sum(is.na(raw_data))

print(total_na_count)

raw_data_rounded_2 <- raw_data_rounded |> 
  mutate_all(~ifelse(. == "...", NA, .)) 

total_na_count_2 <- sum(is.na(raw_data_rounded_2))

print(total_na_count_2)

```

## Running Code

When you click the **Render** button a document will be generated that includes both content and the output of embedded code. You can embed code like this:

```{r}
1 + 1
```

You can add options to executable code like this

```{r}
#| echo: false
2 * 2
```

The `echo: false` option disables the printing of code (only output is displayed).
